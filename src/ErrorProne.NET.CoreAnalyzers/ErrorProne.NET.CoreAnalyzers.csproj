<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyName>ErrorProne.Net.CoreAnalyzers</AssemblyName>
    <RootNamespace>ErrorProne.NET</RootNamespace>
    <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
    <!--<DoILRepack>true</DoILRepack>-->
    <EmbedRuntimeContracts>true</EmbedRuntimeContracts>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="..\ErrorProne.NET.Core\AnalyzerConfigOptionsExtensions.cs" Link="AnalyzerConfigOptionsExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\BodySyntaxExtensions.cs" Link="BodySyntaxExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\CastUtilities.cs" Link="CastUtilities.cs" />
    <Compile Include="..\ErrorProne.NET.Core\CompilationExtensions.cs" Link="CompilationExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\DiagnosticAnalyzerBase.cs" Link="DiagnosticAnalyzerBase.cs" />
    <Compile Include="..\ErrorProne.NET.Core\ErrorProneAttributes.cs" Link="ErrorProneAttributes.cs" />
    <Compile Include="..\ErrorProne.NET.Core\FlowAnalysisExtensions.cs" Link="FlowAnalysisExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\MethodDeclarationSyntaxExtensions.cs" Link="MethodDeclarationSyntaxExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\NamedSymbolExtensions.cs" Link="NamedSymbolExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\StructSizeCalculator.cs" Link="StructSizeCalculator.cs" />
    <Compile Include="..\ErrorProne.NET.Core\SymbolAnalysisContextExtensions.cs" Link="SymbolAnalysisContextExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\SymbolExtensions.cs" Link="SymbolExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\SyntaxFactoryExtensions.cs" Link="SyntaxFactoryExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\SyntaxNodeExtensions.cs" Link="SyntaxNodeExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\TypeExtensions.cs" Link="TypeExtensions.cs" />
    <Compile Include="..\ErrorProne.NET.Core\ValueTypeEqualityImplementations.cs" Link="ValueTypeEqualityImplementations.cs" />
    <Compile Include="..\ErrorProne.NET.Core\WellKnownTypesProvider.cs" Link="WellKnownTypesProvider.cs" />
  </ItemGroup>

  <!--
      Instead of splitting the code into a separate dll, just reference it as the source code.
      This allows referncing multiple analyzer versions at the same time without runtime errors caused by
      incompatible changes on the "core" level
   -->
  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis" Version="4.6.0" />
  </ItemGroup>

  <PropertyGroup>
    <PackageId>ErrorProne.NET.CoreAnalyzers.RenameToAvoidConflict</PackageId>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.4" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.NetAnalyzers" Version="7.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Update="ILRepack.Lib.MSBuild" Version="2.1.18" />
    <PackageReference Update="Nerdbank.GitVersioning" Version="3.6.133" />
    <PackageReference Update="RuntimeContracts" Version="0.5.0" />
  </ItemGroup>

  <!--<Target Name="ILRepack" AfterTargets="Build">
    <ItemGroup>
      <InputAssemblies Include="$(OutputPath)$(AssemblyName).dll" />
      --><!--<InputAssemblies Include="$(OutputPath)RuntimeContracts.dll" />--><!--
       --><!--Add more dependencies as needed--><!-- 
    </ItemGroup>
    --><!--<ILRepack OutputType="Library"  />--><!--
  </Target>-->


  <!--<Target Name="ILRepacker" AfterTargets="Build" >
    <ItemGroup>
      <InputAssemblies Include="$(TargetPath)"/>
      <InputAssemblies Include="@(ReferencePathWithRefAssemblies)" Condition="'%(filename)' == 'RuntimeContracts'" />
    </ItemGroup>

    <ILRepack
        AllowDuplicateResources="false"
        DebugInfo="true"
        Internalize="true"
        InputAssemblies="@(InputAssemblies)"
        OutputFile="$(TargetPath)"
        Parallel="true"
        TargetKind="SameAsPrimaryAssembly" />
  </Target>-->

  <!--<Target Name="_GetFilesToPackage">
    <ItemGroup>
      <_File Include="$(OutputPath)$(AssemblyName).dll" />
      --><!--<_File Include="$(OutputPath)RuntimeContracts.dll" />--><!--

      <TfmSpecificPackageFile Include="@(_File)" PackagePath="analyzers/dotnet/cs/%(_File.RecursiveDir)%(_File.FileName)%(_File.Extension)" />
    </ItemGroup>
  </Target>-->
  
</Project>
