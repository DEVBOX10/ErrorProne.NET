- Do not warn when readonly struct is passed by value into constructor. Done
- Make 'use 'in'-modifier an informational message instead of a warning. 

- Do not warn on readonly struct passed by in if a method is overriden or implements an interface. Done
- Do not warn if 'non-readonly friendly struct' is passed by 'in' in the same struct. Done

- Warn if readonly struct is passed by ref (should be info message).
- Implement: pass parameter by 'in' refactoring.
- Cache non-source types for IsReadOnly.
- Large struct used in many methods? Stateful analysis is required.
- Hidden copy: when an extension method is used that takes a struct by value.
- Analyze ref readonly locals. Done
- Analyze local functions. Done
- Show all hidden copies for structs (info message? Would be good to turn this diagnostics on and off). Done
- Equals and gethashcode are asymmetrical (different props/fields are used). (not sure about that)

Known limitations
- Generic instantiations are not analyzed: public void Foo<T>(in T t) {} Foo<NonReadOnly>(); <-- no warning now.

Infrastructure
- Create one solution
- Create
  - Core (move helpers here)
  - Structs
  - Memory
  - Misc (various analyzers)
  - Exceptions
